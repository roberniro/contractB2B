version: '3'
services:
  server:
    build:
      context: ./backend/contractB2B
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    depends_on:
      - mysql
      - mongodb
      - kafka
    networks:
      - contractB2B-net
    restart: always

  view:
    build:
      context: ./frontend/contractB2B
      dockerfile: Dockerfile
    ports:
      - 80:3000
    networks:
      - contractB2B-net
    restart: always

  mysql:
    build:
      context: ./db/mysql
      dockerfile: Dockerfile
    ports:
      - 3307:3306
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: contractb2b
    networks:
      - contractB2B-net
    restart: always

  mongodb:
    build:
      context: ./db/mongodb
      dockerfile: Dockerfile
    ports:
      - 27018:27017
    networks:
      - contractB2B-net
    restart: always

  kafka:
    image: wurstmeister/kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_HEAP_OPTS: -Xmx256M -Xms128M
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092, PLAINTEXT_HOST://localhost:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092, PLAINTEXT_HOST://localhost:9092
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_CREATE_TOPICS: "public:1:1"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - contractB2B-net
    restart: always

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181
    networks:
      - contractB2B-net
    restart: always

networks:
  contractB2B-net:
    driver: bridge
